{"version":3,"sources":["components/navHeader/NavHeader.js","components/hero/Hero.js","components/card/Card.js","App.js","index.js"],"names":["navHeader","props","className","message","current","top","Hero","Card","onClick","selected","id","src","process","image","alt","name","App","state","characters","score","topScore","shuffle","sort","Math","random","setState","key","indexOf","push","this","NavHeader","map","chars","charName","Component","ReactDOM","render","document","getElementById"],"mappings":"ywBAaeA,MAVf,SAAmBC,GACf,OACI,sBAAKC,UAAU,4BAAf,UACI,sBAAMA,UAAU,uBAAhB,yBACA,sBAAMA,UAAU,UAAhB,SAA2BD,EAAME,UACjC,2CAAcF,EAAMG,QAApB,iBAA2CH,EAAMI,W,MCG9CC,MARf,WACI,OAAO,qBAAKJ,UAAU,4BAAf,SACH,qBAAKA,UAAU,0BAAf,SACI,yF,MCMGK,MATf,SAAcN,GAEV,OACI,qBAAKC,UAAU,SAASM,QAAS,kBAAMP,EAAMQ,SAASR,EAAMS,KAA5D,SACI,qBAAKC,IAAKC,UAAyBX,EAAMY,MAAOC,IAAKb,EAAMc,U,OC0ExDC,G,kNAvEdC,MAAQ,CACPC,WAAYA,EACZT,SAAU,GACVN,QAAS,wBACTgB,MAAO,EACPC,SAAU,G,EASXC,QAAU,WACT,IAAMH,EAAa,EAAKD,MAAMC,WAAWI,MAAK,kBAAMC,KAAKC,SAAW,MACpE,EAAKC,SAAS,CAAEP,WAAYA,K,EAI7BT,SAAW,SAACiB,GACX,EAAKL,WAEqC,IAAtC,EAAKJ,MAAMR,SAASkB,QAAQD,GAC/B,EAAKD,SAAS,CACbN,MAAO,EACPV,SAAU,GACVN,QAAS,uCAGV,EAAKc,MAAMR,SAASmB,KAAKF,GAEzB,EAAKD,SAAS,CACbN,MAAO,EAAKF,MAAME,MAAQ,EAC1BhB,QAAS,sBAKP,EAAKc,MAAME,OAAS,EAAKF,MAAMG,UAClC,EAAKK,SAAS,CACbL,SAAU,EAAKH,MAAMG,SAAW,K,uDAhCnC,WACCS,KAAKR,Y,oBAoCN,WAAU,IAAD,OACR,OACC,sBAAKnB,UAAU,OAAf,UACC,cAAC4B,EAAD,CACCzB,IAAKwB,KAAKZ,MAAMG,SAChBhB,QAASyB,KAAKZ,MAAME,MACpBhB,QAAS0B,KAAKZ,MAAMd,UAErB,cAAC,EAAD,IACA,qBAAKD,UAAU,YAAf,SACE2B,KAAKZ,MAAMC,WAAWa,KAAI,SAAAC,GAAK,OAC/B,cAAC,EAAD,CAECC,SAAUD,EAAMjB,KAChBF,MAAOmB,EAAMnB,MACbJ,SAAU,EAAKA,SACfC,GAAIsB,EAAMtB,IAJLsB,EAAMtB,gB,GA5DAwB,cCJlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.090e3f20.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction navHeader(props) {\r\n    return (\r\n        <nav className=\"navbar bg-dark sticky-top\">\r\n            <span className=\"navbar-brand mb-0 h1\">Clicky Game</span>\r\n            <span className=\"message\">{props.message}</span>\r\n            <span>Score: {props.current} | Top Score: {props.top}</span>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default navHeader;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Hero() {\r\n    return <div className=\"jumbotron jumbotron-fluid\">\r\n        <div className=\"container containerText\">\r\n            <h3>Test your memory skills! Click a portrait to begin</h3>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Hero;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Card(props) {\r\n\r\n    return (\r\n        <div className=\"imgDiv\" onClick={() => props.selected(props.id)}>\r\n            <img src={process.env.PUBLIC_URL + props.image} alt={props.name}></img>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React, { Component } from \"react\";\nimport NavHeader from \"./components/navHeader/NavHeader\";\nimport Hero from \"./components/hero/Hero\";\nimport Card from \"./components/card/Card\";\nimport characters from \"./characters.json\";\nimport \"./appStyle.css\"\n\n\nclass App extends Component {\n\t// Declaring the state\n\tstate = {\n\t\tcharacters: characters,\n\t\tselected: [],\n\t\tmessage: \"Click a card to begin\",\n\t\tscore: 0,\n\t\ttopScore: 0\n\t};\n\n\t// Upon mounting shuffle cards\n\tcomponentDidMount() {\n\t\tthis.shuffle();\n\t}\n\n\t// Sorts all the elements in the array then sets the new state equal to the new sorted array\n\tshuffle = () => {\n\t\tconst characters = this.state.characters.sort(() => Math.random() - 0.5);\n\t\tthis.setState({ characters: characters });\n\t}\n\n\t// Picks up the key/id of the selected card then checks the selected array to see if that card has already been picked\n\tselected = (key) => {\n\t\tthis.shuffle();\n\n\t\tif (this.state.selected.indexOf(key) !== -1) {\n\t\t\tthis.setState({\n\t\t\t\tscore: 0,\n\t\t\t\tselected: [],\n\t\t\t\tmessage: \"You're gonna carry that weight...\"\n\t\t\t});\n\t\t} else {\n\t\t\tthis.state.selected.push(key);\n\n\t\t\tthis.setState({\n\t\t\t\tscore: this.state.score + 1,\n\t\t\t\tmessage: \"Bang! Keep going\"\n\t\t\t})\n\t\t}\n\n\t\t// If the current score is greater than the top score the top score will auto increment\n\t\tif (this.state.score >= this.state.topScore) {\n\t\t\tthis.setState({\n\t\t\t\ttopScore: this.state.topScore + 1\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"main\">\n\t\t\t\t<NavHeader\n\t\t\t\t\ttop={this.state.topScore}\n\t\t\t\t\tcurrent={this.state.score}\n\t\t\t\t\tmessage={this.state.message}\n\t\t\t\t/>\n\t\t\t\t<Hero />\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t{this.state.characters.map(chars => (\n\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\tkey={chars.id}\n\t\t\t\t\t\t\tcharName={chars.name}\n\t\t\t\t\t\t\timage={chars.image}\n\t\t\t\t\t\t\tselected={this.selected}\n\t\t\t\t\t\t\tid={chars.id}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}